{
  "name": "buysell-backend",
  "version": "1.0.0",
  "description": "Backend API for BuySell Platform - Marketplace with Node.js, Express, and Supabase",
  "main": "src/server.js",
  "type": "module",
  "scripts": {
    "dev": "nodemon src/server.js",
    "start": "node src/server.js",
    "build": "npm run build:clean && npm run build:compile",
    "build:clean": "rimraf dist",
    "build:compile": "babel src --out-dir dist --copy-files",
    "serve": "node dist/server.js",
    "test": "jest --verbose --coverage",
    "test:watch": "jest --watch",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "lint": "eslint src/ --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint src/ --ext .js,.jsx,.ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "type-check": "tsc --noEmit",
    "migrate": "node scripts/migrate.js",
    "migrate:create": "node scripts/migrate.js --create",
    "seed": "node scripts/seed_database.js",
    "setup": "node scripts/setup.js",
    "healthcheck": "node scripts/healthcheck.js",
    "backup": "node scripts/backup_database.js",
    "deploy:staging": "node scripts/deploy.js staging",
    "deploy:production": "node scripts/deploy.js production",
    "docker:build": "docker build -t buysell-backend .",
    "docker:run": "docker run -p 3001:3001 buysell-backend",
    "docker:compose": "docker-compose up -d",
    "docker:compose:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:compose:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "clean": "rimraf node_modules dist coverage",
    "preinstall": "npx only-allow npm",
    "prepare": "husky install",
    "release": "standard-version",
    "release:minor": "standard-version --release-as minor",
    "release:major": "standard-version --release-as major"
  },
  "keywords": [
    "marketplace",
    "ecommerce",
    "api",
    "nodejs",
    "express",
    "supabase",
    "postgresql",
    "stripe",
    "cloudinary",
    "jwt",
    "authentication",
    "authorization",
    "rest-api",
    "typescript",
    "docker"
  ],
  "author": {
    "name": "BuySell Team",
    "email": "dev@buysell.com",
    "url": "https://buysell.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/buysell-platform/backend.git"
  },
  "bugs": {
    "url": "https://github.com/buysell-platform/backend/issues"
  },
  "homepage": "https://github.com/buysell-platform/backend#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.38.0",
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "dotenv": "^16.3.1",
    "pg": "^8.11.3",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "stripe": "^13.3.0",
    "cloudinary": "^1.41.0",
    "resend": "^2.0.0",
    "aws-sdk": "^2.1494.0",
    "multer": "^1.4.5-lts.1",
    "express-rate-limit": "^7.1.5",
    "rate-limit-redis": "^4.0.1",
    "redis": "^4.6.7",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "validator": "^13.11.0",
    "uuid": "^9.0.1",
    "node-cron": "^3.0.3",
    "axios": "^1.5.1",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "http-status-codes": "^2.3.0",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "qs": "^6.11.2",
    "cookie-parser": "^1.4.6",
    "express-async-errors": "^3.1.1",
    "express-validator": "^7.0.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "compression": "^1.7.4",
    "hpp": "^0.2.3",
    "express-mongo-sanitize": "^2.2.0",
    "xss-clean": "^0.1.4",
    "toobusy-js": "^0.5.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.23.0",
    "@babel/core": "^7.23.0",
    "@babel/node": "^7.22.19",
    "@babel/preset-env": "^7.23.0",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.7",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.8.6",
    "@types/node-cron": "^3.0.11",
    "@types/pg": "^8.10.9",
    "@types/supertest": "^2.0.16",
    "@types/validator": "^13.11.5",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "babel-jest": "^29.7.0",
    "eslint": "^8.52.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-jest": "^27.6.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-security": "^1.7.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.1.0",
    "nodemon": "^3.0.1",
    "prettier": "^3.0.3",
    "rimraf": "^5.0.5",
    "standard-version": "^9.5.0",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/**/*.d.ts",
      "!src/**/*.test.{js,ts}",
      "!src/**/*.spec.{js,ts}"
    ],
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "testMatch": [
      "**/__tests__/**/*.{js,ts}",
      "**/?(*.)+(spec|test).{js,ts}"
    ],
    "moduleNameMapping": {
      "^@/(.*)$": "<rootDir>/src/$1"
    },
    "setupFilesAfterEnv": [
      "<rootDir>/src/tests/setup.js"
    ]
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "18"
          }
        }
      ]
    ]
  },
  "volta": {
    "node": "18.18.2",
    "npm": "9.8.1"
  },
  "packageManager": "npm@9.8.1",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
